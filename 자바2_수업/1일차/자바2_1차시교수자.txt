자바2 1일차 

학습목표 :   
1.  라이브러리를 만들 때 인터페이스를 활용하는 이유를 알 수 있다.
2.  ArrayList<Customer> 형의 객체배열을 정렬할 수 있다 
   -(  Comparable인터페이스와 Comparator 인터페이스를 구현할 수 있다. )
3.  지네릭제한하는 와일드 카드 경험하기
     와일드카드
      ?   =><? extends Object>와 동일한 효과 
     <? extends T > : T와 T를 상속받은 클래스를 의미함( T이하  - T상한)   
     <?  super T >  : T와 T 이상    (T하한)  

    세 개의 키워드를 이해할 수 있다.
 
 

1.  라이브러리 작성시 인터페이스 활용해 보기
   -MyArrays만들기    
   -MyArrays 제네릭버전 만나보기(구경하기)
2. Generic 학습하기
   - 지네릭 Generic 클래스 만들기  -  OList, GList 복습하기   
   - 지네릭 매서드 만들기 
   - 제네릭 제한하기   
    <? extends T > : T와 T를 상속받은 클래스를 의미함( T이하 )     <?  super T >  :T 이상  , ?

###########################################
인터페이스  interface 
 : 추상매서드만 가지고 있는 클래스를 인터페이스라고 한다.
###########################################
interface MyInterface{
    void test();
} 
 

0. 오늘의 요리사 찾기   (인터페이스를 활용한 프로그램 맛보기) 

1. 라이브러리만들 때 인터페이스 활용하기 ( 기능을 만드는 사람이 결정할 수 없는 코드가 있을 때 인터페이스를 활용한다)
   Comparable, Comparator 인터페이스 사용하기
 - MyArrays  - sort 구현하기  
  : MyArrays의 sort를 이용하여 학생목록 정렬하기
   

2. Generic 학습하기
   - Generic 클래스 만들기  -  OList, GList 복습하기
   - ThreeDPrinter 만들기   -  Powder , Plastic    , 각 각의 재료를 사용하는 2개 ThreeDPrinter만들기
   - 두 개의 클래스를 
   - ThreeDPrinterG (제네릭으로 만들기) 한 개 만들어서 사용하기
   - 제네릭 제한하기   :  Material를 상속받은 클래스만 사용할 수 있는 ThreeDPrinter 만들기
    <? extends T > : T와 T를 상속받은 클래스를 의미함( T이하 )     <?  super T >  :T 이상 
    - 지네릭매서드 만들기 
 
   
 
############
오후실습
:  
제네릭클래스와 제네릭 매서드를 직접만들어야 한다기 보다  제네릭을 이해하고 경험하는 시간을 갖도록 합시다
자바코드를 작성하거나 자바코드를 경험하다 보면  자연스럽게 제네릭이 이해될 수 있다.
직접작성하는 것에 부담감을 갖지 말기 

오후실습과제
 
1) 지네릭매서드 만들기 문제
  String[] strings = {"apple", "banana", "orange", "grape", "kiwi"}; 에서  "orange"의 위치 반환하는 매서드 만들기 
  지네릭매서드로 작성하고 제출하기 

2) 요리사프로그램 구조화하기 ( main - > 여러개의 매서드로 분리하기)   
############



오늘의 요리사 찾기 프로그램
################################
학생 - 자신의 이름으로 클래스를 작성한다.
################################
1.  제공된 Cook 클래스를 상속받는다.                              ( 3개의 인터페이스가 제공된다   한식가능한, 중식가능한, 일식가능한 ) 
2.  3가지 인터페이스 중에서 한 가지만 구현합니다.  (선택)   (  예시 : WJY extends Cook  implements  한식가능한   ) 
    => 제출

3.  요리사프로그램 !!
     오늘의 요리사를 찾는 프로그램 
     오늘의 요리사가 선정됨

  
############################
오늘의 요리사 프로그램 동작순서 
1. Cook을 상속받은 19개의 각기 다른 클래스를  Cook형 ArrayList에 저장한다
2. 3개의  한식가능한, 중식가능한, 일식가능한  요리사 그룹으로 나눈다
3. 컴퓨터의 랜덤으로 3개의 요리사 그룹중에 한 개를 선택한다
4. 선택된 요리사그룹 중에서 랜덤의 요리사 한 명을 선택한다.
5. 오늘의 요리사를 30초 후에 발표한다. ( Thread.sleep )
