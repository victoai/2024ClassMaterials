--세번째 문제

--member_tbl_11테이블로부터 고객정보 조회하기
select m_grade from member_tbl_11;

--member_tbl_11테이블로부터 고객등급 조회하기, 중복된 값 제외하고 조회하기
select distinct m_grade from member_tbl_11;

--고객테이블로부터 아이디 userid라는 이름으로 조회하기(as는 생략가능함)
select * from member_tbl_11;
select m_id as userid from member_tbl_11;

--고객테이블로부터 이름에 '님'자를 붙여 name이라는 컬럼으로 조회되도록 하시오
select * from member_tbl_11;
select m_name || '님' as name from member_tbl_11;




--문제)  고객정보 테이블로부터 주민번호 7번째 숫자 (성별을 나타내는)를 추출하여 GENDER 라는 이름으로 주민번호와 함께 조회하시오
select * from CUST_INFO;
select first_nm, id, decode(substr(id, 7, 1), '1', 'MAN', '2', 'WOMAN') as gender from CUST_INFO;

--문제)고객정보 테이블로부터 주민번호, LAST_NM을 모두 소문자로 조회되도록 하시오
select lower(id), lower(last_nm) from cust_info;

--문제)고객정보 테이블로부터 DM발송을 위해서 NAME이라는 이름으로 KIM, JIHOON 과 같은형식으로 조회될 수 있도록 하시오
select (last_nm, ',', first_nm) as name from CUST_INFO;

--문제)고객정보 테이블로부터 고객 주민번호, 수익을 소수 둘째에서 반올림하여 소수 첫째자리까지 표시될 수 있도록 조회 하시오
select id, round(annl_perf, 1) as 반올림한_수익 from cust_info;

--문제) 고객정보 테이블로부터 고객 주민번호, 수익을 소수 첫째에서 버림하여 정수로 나타낼수 있도록 조회하시오
select id, floor(annl_perf) as 정수_수익 from cust_info;

--문제) 현재 날짜를 조회하시오
SELECT SYSDATE FROM DUAL;
SELECT 2+3 FROM DUAL; 

--문제)고객테이블로부터 주민번호 , 수익이 300 이상이면 고수익, 100이상은 일반수익 ,0이하면 손해 , 나머지는 변동없음 내용이 RESULT 컬럼명으로 조회될 수 있도록 하시오
select id, annl_perf, case 
when annl_perf >= 300 then '고수익' 
when annl_perf >= 100 then '일반수익' 
when annl_perf <= 0 then '손해' 
else '변동없음' 
end as  "result" from cust_info;

--문제)고객테이블로부터 이름과 포인트를 조회하시오 (단 포인트가 적립되지 않은 고객은 0으로 표시되도록 하시오) 힌트:NVL 함수 사용
select * from member_tbl_11;
select m_name, nvl(m_point, 0) from member_tbl_11;

--문제) 힌트: NVL2함수를 사용하세요 고객테이블로부터 기존포인트 점수에서 100포인트씩 인상하려고 합니다. NEXT_POINT라는 컬럼으로 조회되도록 하시오, 고객이름, 포인트와 함께 조회하시오 ( 기존포인트가 없는 사람은 0포인트로 간주합니다)
select * from member_tbl_11;
select m_name, nvl2(m_point, m_point + '100', 0) as next_point from member_tbl_11;


--네번째 문제

--문제1. stud_score 테이블을 사용하여 null값을 포함한 행의 개수를 세보자
select count(*) from stud_score where eng_score + phil_score + music_score is null;

--문제2. STUD_SCORE 테이블을 사용하여 NULL값을 제외한 제외한 음악 점수 보유자를 세보자
select count(*) as music_score_have
from stud_score
where music_score is not null;

--문제3. STUD_SCORE 테이블을 사용하여 수학 점수의 총 합계를 구해보자
select sum(math_score) from stud_score;

--문제4. STUD_SCORE 테이블을사용하여 음악 점수의 평균을 구해보자 
select avg(music_score) from stud_score;

--문제5. STUD_SCORE 테이블을 사용하여 수학점수 최댓값 및 최솟값을 구해보자
select max(math_score), min(math_score) from stud_score;

--문제6. CLERK는 7% , OFFICER는 5% , MANAGER는 3%로 연봉을 인상하기로 했다. STAFF_SAL테이블을 사용하여 각 직원별 인상 연봉을 예상해보자 ( CASE WEHN 사용해보기 )(현재연봉을 기준으로 직위별 예상연봉을 구해보자)
select * from staff_sal;
select job, case 
when job = 'clerk' then current_sal * '1.07'
when job = 'officer' then current_sal * '1.05'
when job = 'manager' then current_sal * '1.03'
else current_sal
end as "expected_sal" from staff_sal;


--문제1. PRC 테이블을 사용하여 고객등급별 인당 평균 연 수익을 계산해 보자( GROUP BY 사용)
select * from prc;
select set2, avg(annl_rev) as avg_income_eachperson from prc group by set2;

--문제2. PRC 테이블을 사용하여 고객등급별 고객 수를 확인해보자(GROUP BY)
select * from prc;
select set2, count(*) from prc group by set2;

--문제3. 구매횟수가 두 번 이상인 고객에게 마케팅을 하려고 한다. 마케팅 대상자의 고객이름을 조회하시오
select * from prod_sales;
select cust_nm from prod_sales group by cust_nm having count(sales_amt) >= '2';

--문제4. 구매금액의 합이 7만원 이상인 고객에게 마케팅을 하려고 한다. 마케팅 대상자는 누구일까?
select*from prod_sales;
select cust_nm, sum(sales_amt) from prod_sales group by cust_nm having sum(sales_amt) >= '70000';