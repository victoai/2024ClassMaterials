스프링4차시 
요청정보 확인하기 (요청줄 + 요청헤더 + 요청바디) 구성됨
controller 응답 type 확인하기
- mvc : view 반환 (view + 데이터)
  :void, String , ModelAndView 
- 데이터반환 (json)  
  (@ResponseBody  , json 관련 라이브러리 필요함 - jackson-data-bind )
 -form요청 (get, post) 
  get: 요청헤더에서 데이터 꺼내옴
  post: 요청바디에서 데이터 읽어옴    
 -ajax로 요청시에는 method type => get, post, put, delete 사용할 수 있다.   


파일업로드 <form action="/upload/spring/upload" method="post" enctype="multipart/form-data">  
 파일업로드시 반드시 method="post"  enctype="multipart/form-data" 해야함 
 -파일업로드 한 이미지 보여주기  
 -파일업로드 한 후 다운로드 하기 

OpenAPI 사용하기
1.지도 API   :
2.네이버검색  :
3.공공데이터 : 

######################################
요청헤더정보 확인하기
요청request정보 확인하기
######################################
######################################
서버에요청 데이터보내기
요청헤더에 보내기 : 쿼리스트링  ?id=hong
요청바디에 보내기 
form이용 method="post"방식
요청바디에로 보내온 데이터 처리하기 
######################################

######################################
Controller의 반환타입 알아보기
void  :view (요청이름이 view  정보임 )
String  :view  ( return  문자열이  view 정보임 )
Score  : json  => 데이터응답하기
ResponseEntity<T> :응답데이터와 헤더정보를 함께 보내기
#######################################



파일업로드 관련 dependency
 	 <dependency>
	     <groupId>commons-fileupload</groupId>
	     <artifactId>commons-fileupload</artifactId>
	     <version>1.3.1</version>
	 </dependency>		
	<!-- commons-io -->
	<dependency>
	    <groupId>commons-io</groupId>
	    <artifactId>commons-io</artifactId>
	    <version>2.4</version>
	</dependency>


servlet-context에 내용 추가	
   <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">     
      <beans:property name="maxUploadSize" value="10485760" />  <!--  10M   1024byte * 1024  1mbyte  *10  = 10M -->
      <beans:property name="defaultEncoding" value="utf-8" />      <!--  l024byte =>1kbyte   , 1024kbyte == >1M   *10   =>10M -->
   </beans:bean>


 

@PostMapping("/formRegisterPost")
	public void formpost( HttpServletRequest request) throws IOException {
		
      String id  = request.getParameter("id");
      String pw  = request.getParameter("pw");
      
      System.out.println( id);
      System.out.println( pw);
		
		
	  BufferedReader reader = new BufferedReader ( new InputStreamReader ( request.getInputStream()));
	  String line="";
	  StringBuilder resultData = new StringBuilder();
	  
	  
	  while(  ( line = reader.readLine()) !=null) {
		  resultData.append(line);
	  }  
	
	  System.out.println( resultData ); 
	}
	

