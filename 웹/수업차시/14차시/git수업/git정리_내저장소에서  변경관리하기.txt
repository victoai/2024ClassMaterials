Git으로 할 수 있는 것들
(의미있는 변화를 기록하는 것)

1.코드저장 (백업), 원격저장소에 밀어넣기
2.
  내 커밋관리하기
    - 과거조회, 
    - 되돌리기 (내리포지토리에서)
  branch만들고 작업하기
    -브랜치만들기
    -브랜치병합하기
    -브랜치 삭제하기
    
3.협업 (원격저장소를 만들고 협업하기) 


##################################
#github  가입하기 
#git 설치
#first repository만들기   (원격저장소 만들기)
 ##################################
# 처음에 사용자 정보 등록해야 함  
#사용자정보 등록      
  git config --global user.name  "sample"
  git config --global user.email  "sample@gmail.com"

   git  config --list
   등록정보 확인
#

git init 
git add . 
git commit -m " homework  sample"
git branch -M main
git remote add origin https://github.com/victoai/first.git
git push -u origin main


내리포지토리에 여러가지 버전 만들기 
(의미있는 변경사항 만들기)
 
1. 내 작업폴더를 로컬리포지토리로 만들기   (working directory)
     git init
2.  변경사항저장하기                                (stage : 스테이지)  
     git add .
3.  버전만들기 커밋하기  :                         repository : 커밋정보
     git commit -m  "커밋내용  메뉴만들기ver1 "
     git commit -m  "커밋 내용  메뉴만들기ver1  색깔 변경 "

4.  커밋조회하기
    # 커밋이력조회하기 :
     
     커밋해시를 확인할 수 있다 (커밋을 식별할 수 있는 키값)
     git log    
     git log  --oneline   (간략하게 한 줄로 표시한 내용임)

5.  커밋 되돌리기

     #이전커밋으로 되돌리기
     git reset --hard HEAD^    : 이전 커밋으로 되돌리기
     git reset --hard HEAD^^  : 두번째 커밋으로 되돌리기
     git reset --hard HEAD~1  : 이전 커밋으로 되돌리기
     git reset --hard HEAD~2  : 두번째 커밋으로 되돌리기 

    #해당 커밋으로 되돌리기
    git reset --hard 커밋해시  (되돌리고 싶은 커밋해시값)  

 
<브랜치를 만들면 좋은점   메뉴만들기를 두 가지 버전으로 만들어서 테스트 할 수 있다.  협업시 브랜치가 필요함 >
6. 브랜치만들기
   git branch  새브랜치명

7. 브랜치 변경하기
   git switch 브랜치명

8. 브랜치 병합하기  (master작업)     - fast forward merge 
   git merge 병합할브랜치명 

9. 브랜치 삭제하기 (master작업)
   git branch -d  브랜치명

 



 





                                        
                                                     
 

