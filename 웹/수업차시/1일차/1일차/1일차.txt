웹1일차  

학습목표  : 
1.
2.
3.
4.
5.


웹서버
클라이언트(웹브라우저)와 웹서버

정적리소스 :    누구나 똑같은 정보를 받느다
동적리소스  :   요청한 사람마다 다른 정보를 받는다.
 

 
동적리소스 맛보기    localhost:8090/start.html
##################################################
서블릿맛보기 - 메모장에서 서블릿만들고 서버에 배포해 보기
#################################################

동적페이지만들어보기
이클립스IDE 사용하기

5개별 응답              localhost:8090/satr2/cnt=5
1.별 응답하기 
2.화이팅 메시지 응답하기 

###########################################
서블릿으로 원하는 페이지 제공해보기
서블릿에서 html, css를 직접다루는것이 불편하다 
###########################################


서블릿으로 직접응답할때 코드 작성하는 예시
response.setStatus(200);                     --  브라우저가 기본적으로 해 줌
response.setContentType("text/html;charset=utf-8");  --  응답의형식 MIME , 서버가 보내는데이터형식(html문서이다) 알린다.
                                                                       --  서버가 데이터를 보낼때  utf-8로 인코딩해서 보내겠다 (한글깨짐방지)

response.setCharacterEncoding("utf-8"); --  클라이언트쪽에서 utf-8로 해석하라는 의미  (서버가 utf-8로 보냈지만 클라이언트가 그렇게 해석하지 않으면 한글깨짐발생함)
                                                      --  한글을 응답하려면 해 줘야 함.한글깨짐방지 
                                                      --  주의 !! 내용을 출력하기전에 먼저 써야한다.


PrintWriter out =response.getWriter();   // 문자기반의 출력스트림을 얻어온다
out.println("<html">);
out.println("<head></head>");
out.println("<body>hello~</body>");
out.println("</html>");
out.close();


#################################################
오후실습 : 서블릿으로 서비스제공하는 문제 풀기
##################################################
다음의 서블릿을 만드시오 (url요청이 같으면 안됩니다.)
 
1. 두 수를 사용자로 부터 입력 받아 사칙연산해서 제공하기
2. 3단 제공하기 (3단 제공하는 서비스)
3. 원하는단 제공하기 (원하는단을 제공하는 서비스)
4. 학생성적을 처리하기 위한 Score class를 만든것처럼
자신이 처리하고 싶은 자료에 대한 class를 만들고 그 정보를 제공하기 (응답해 주기)
예) 책정보:Book class 
5. 원하는 수만큼의 별을 출력하기 ( 원하는 수만큼 별을 출력하는 서비스제공하기)
6. 수를 사용자로부터 받으면 입력한 수에 대한 약수를 구해서 제공하기
(약수를 구해주는 서비스)
7. 화이팅메시지 제공하기
8. 랜덤한 화이팅메시지 제공하기
9. 귀여운이미지 제공하기
10. 랜덤한 귀여운이미지 제공하기


##############################################
 서블릿  url 매핑하기
##############################################
<servlet>
	<servlet-name>first</servlet-name>
        <servlet-class>FirstServlet</servlet-class>
</servlet>

<servlet-mapping>
	<servlet-name>first</servlet-name>
        <url-pattern>/lotte/shop.do</url-pattern>
</servlet-mapping>
