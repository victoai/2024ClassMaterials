


알고리즘 :  문제를 해결하는 방법 유한의 절차 

문제- >  이원화(무엇, 방법)

무엇에만 집중
각 단계로 나눠진 작은 문제에 대한  how 찾기 


돼지갈비찜을 만들기려고 하면  무엇을 해야하는지 큰덩리 (몇 단계의 단계로 나눈다)
큰문제
-> 작은 문제 여러 개로 나눈 효과가 있다. 

큰문제를 해결하는 것과 작은 문제를 해결하는 것 중 무엇이 유리할까요?

고기핏물을 빼는것에 집중합니다.   방법을 찾는다   핏물은 어떻게 빼지?  찾는다 - 인터넷, 엄마 , 책   
야채를 다듬고 썬다 .   방법을 찾는다.
양념장을 만든다 .  방법을 찾는다. 내가 만들수 도 있고, 사올수도 있다.
가스불을 어떻게 해야하는지 방법을 찾는다.

분할정복

큰문제를 작은 문제로 나누고 
작아진 문제에 대한 방법을 찾아가는 것으로 
큰 문제를 해결해 나아간다. 
 

알고리즘은 ,  알고리즘을 학습하는 것은 ( 초중고에서)
문제해결능력을 키우기 위한 것 !!! 
결국 무언가를 할 때 먼저 생각하고 더 효율적으로 일을 수행해라라는 의미  !! 


우리는 컴퓨터를 가지고 문제를 해결하려고 하는 것입니다.
컴퓨터가 이해하는 언어로 표현해야합니다=> 코딩

무엇을 어떻게 해야하는지가 검증까지 끝났다면 
프로그래밍언어로 표현하는 것만 남은 것입니다.
( 프로그래밍언어의 문법을 알아야 합니다.)


자바문법만 안다고 코드를 잘 작성할 수 있느냐?
1달   자바를 배웠습니다 .= > 자바로 프로그래밍을 잘 할 수 있나요?  물으면 어때요? 

체계적으로 문제를 해결한 자료를 제공해 드립니다. 
그리고 이것을 코드로 구현해 보는 시간을 갖겠습니다.

코딩이 어려운것인지를 경험하려고 합니다.
(무엇을 어떻게 해야하는지 검증되지 논리를 가지고 코드를 작성하려니 힘이 드는것 입니다.)

<코딩경험 갖기>, 무작정 따라 작성해보기
짝수홀수 개수 구하기 
사원의 임금 구하기


자바프로그래밍을 잘하려면 ? ,  잘 못한다면 아래에 대한 학습이 제대로 이루어지지 않았다는 의미 
1.  문제해결능력키워야 함  , 체계적으로 문제를 해결하는 방법 익히여함.  배우고나면 너무 당연한 이야기  
2.  자바의 문법 (  배열 ,  함수,  라이브러리 만들수 있는가 , 구조화된데이터를 처리할수 있느냐? ( 학생정보, 고객정보, 책정보) , 생성자의미,
                                                  , 다형성코드를 작성할 수 있느냐 ?  , =>업캐스팅, 다운캐스팅을 이해하는가 ? )  



일주일 학습방향
1.  낼일오전까지 진도 
2.  내일오후 ~ 수요일까지  문제풀이시간을 드림 
3.  목요일날 발표  -> 코드로 표현하는 코딩시간  , 자료공유
4.  금요일 기본문법정리,   화면구현평가에 대한 자료,  2개의 페이지 만들기 연습  , 실기시험