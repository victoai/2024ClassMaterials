자바 API document 확인하기

자바가 제공하는 라이브러리 확인하기  (클래스기반으로 라이브러리를 만든다)
https://docs.oracle.com/javase/8/docs/api/overview-summary.html


##############
static 붙은 매서드 
#############
사용법 =>  클래스명.매서드명()
ex)  int result  =  Math.abs(-7);

###################
static이 붙지 않은 매서드 
###################

Random클래스 
nextInt() 매서드 확인하기

ex)
Random r = new Random();  //객체생성코드를 반드시 작성해야 함
int result = r.nextInt();



##############
생각해보기
##############

class 작성시  static 붙이 않는 매서드를 작성한다는 것은 단순한 기능을 제공하는 것이 아니라 
class 멤버변수를 다루는 기능이다
변수가 생성된 이후에만 사용이 가능하다 .
(변수의 값을 변화시키거나, 이용하는 기능들이다.)
=> 그래서 new라는 코드 이후에 매서드를 사용할 수 있다.

##########################################################################################
static이 붙은 않은 매서드가 있다면 이 매서드는 그 클래스를 객체로 생성(필요한 변수를 만든후 ) 한 후 부터 사용할 수 있다.
사용시점이 객체생성이후이다 !!!!!!!
##########################################################################################


this 
객체의 매서드 호출시 생성된 객체의 주소가 보이지 않게 전달되고 있다.
매서드에서는 그 주소를 this라는 참조형변수에 저장하고 사용하고 있다.
즉 매서드에서  변수의 정보를 알 수 있게 되는 것이다.






-- static 정리
   static은 매서드와  static변수는 다른 의미를 갖는다. !


--static 매서드
   static 매서드  (  일반적인 함수 ,  어떤 클래스에 소속된 기능, 함수 의미) 사용법 : 클래스명.매서드명()   Math.random(); 
   static이 아닌 매서드 ( 클래스형으로 만들어진 객체를 다루는 기능 )  객체생성, 즉 new 이후부터  객체명.매서드()  Random r = new Random();  r.nextInt();
   

--
자바라이브러리 사용하기 (java API 문서 확인하기, 라이브러리 사용법 문서이다)
:어떤 클래스에 어떤기능이 있고 어떻게 사용하는지에 대한 방법이 적힌 문서이다
static과 static이 아닌 매서드 사용법

static--
Math.random()

non-static --
Random r = new Random();
r.nextInt();



 
