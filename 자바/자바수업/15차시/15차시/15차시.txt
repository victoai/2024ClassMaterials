
인터페이스란?

계산기를 만들기 위한 인터페이스 Calculator인터페이스 
인터페이스를 구현한 계산기 만들기
(익명클래스 작성하기)

추상매서드만을 가진 클래스이다
Interface MyInterface{
         void a();
         void b();
}



객체지향언어에서 인터페이스를 사용하는 경우 ?
- 개발을 독립적으로 할 수 있다.
- 특정 객체에 의존하지 않는 프로그래밍을 할 수 있다.


 

1. 각자가 작성한 프로그램을 실행시켜주는 Pramgram을 작성해야 한다고 생각해 보자
2. 각 개발자는 각기 다른클래스이름의 각기 다른 매서드이름을 정의할 수 있다.
3. 그러므로 Program을 작성하는 사람은 각 개발자가 작성한 클래스가 만들어지기를 기다려야 한다.
4. 독립적인 개발이 되지 않는다. 독립적인 개발을 위해서 
5. 약속 (인터페이스)를 정하고  Program을 작성할 수 있다.
4. Program을 작성해야 하는 사람이 Runnable 인터페이슬 작성하였다.  그리고 run이라는 추상매서드를 정의하였다
5. 아직 각 프로그램이 작성되지 않았더라도 Main Program을 작성한 사람은 프로그램을 완성할 수 있다
5. 물론 정상적인 실행을 위해서는  인터페이스를 구현한 객체가 필요하다.

///////////////////////////////////

Runnable 인터페이스 만나기

 Interface Runnable{
         void run(); 
  }

/////////////////////////////////
class Program{   
    public   Runnable r ;

    public  void SetR(  Runnable r ) {
        this,r = r; 
   }   
    public void myRun  (  ) {
                System.out.println( "당신의 프로그램을 실행시켜 드립니다" );
                r.run();
   }
  
  public static void  main(String[] args ) {
              Program p = new Program();
              p.set(  ) ; //<= 인터페이스를 구현한 객체를 넘겨줘야 한다.
              p.myRun( ); // 
  }
 
}



//////////////////////////////////
Comparator 인터페이스 만나기
Comparable 인터페이스 만나기

정렬기능을 제공하는 클래스 만들기 
ArrayList를 정렬해 주는 기능을 가진 Collections.sort() 기능을 제공한다
이 기능을 사용하면 편하게 list 목록을 정렬할 수 있다.



















